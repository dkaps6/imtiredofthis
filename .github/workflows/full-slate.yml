name: Full Slate

on:
  workflow_dispatch:
    inputs:
      season:
        description: "Season (e.g., 2025)"
        required: false
        default: "2025"
      date:
        description: "Slate date (YYYY-MM-DD) or blank for latest"
        required: false
        default: ""

concurrency:
  group: full-slate-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  full_slate:
    runs-on: ubuntu-latest

    env:
      # Expose your provider secrets (only if theyâ€™re set in repo settings)
      APISPORTS_KEY: ${{ secrets.APISPORTS_KEY }}
      ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
      ESPN_COOKIE: ${{ secrets.ESPN_COOKIE }}
      MSF_KEY: ${{ secrets.MSF_KEY }}
      MSF_PASSWORD: ${{ secrets.MSF_PASSWORD }}
      NFLGSIS_USERNAME: ${{ secrets.NFLGSIS_USERNAME }}
      NFLGSIS_PASSWORD: ${{ secrets.NFLGSIS_PASSWORD }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install requirements
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install --prefer-binary -r requirements.txt

      - name: Prepare dirs
        run: |
          mkdir -p data outputs outputs/metrics logs runs
          echo "PYTHONPATH=$PWD" >> $GITHUB_ENV

      # ---------------- Providers that must run BEFORE team_form ----------------
      # GSIS (nflverse) aggregates; allows prior-season box-count backfill
      - name: GSIS (nflverse) aggregates
        run: python scripts/providers/gsis_pull.py ${{ inputs.season || '2025' }} --box-backfill-prev

      # Sharp Football: writes data/sharp_team_form.csv + other sharp_*.csv fallbacks
      - name: Sharp Football team metrics
        run: |
          python scripts/providers/sharpfootball_pull.py "${{ inputs.season || '2025' }}"

      # ---------------- Run the pipeline (engine calls team_form, player_form, pricing) ----------------
      - name: Run pipeline
        run: |
          python -m engine --season "${{ inputs.season || '2025' }}" --date "${{ inputs.date || '' }}" --bookmakers=""

      # Always upload artifacts (even on failure) so you can inspect logs/CSVs
      - name: Upload artifacts (always)
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: run-${{ github.run_id }}
          path: |
            runs/**
            outputs/**
            data/**
            logs/**
