name: Full Slate

on:
  workflow_dispatch:
    inputs:
      season:
        description: "Season (e.g., 2025)"
        required: false
        default: "2025"
      date:
        description: "Slate date (YYYY-MM-DD) or blank for latest"
        required: false
        default: ""

concurrency:
  group: full-slate-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PYTHONDONTWRITEBYTECODE: "1"
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      PYTHONPATH: ${{ github.workspace }}
      APISPORTS_KEY: ${{ secrets.APISPORTS_KEY }}
      ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
      ESPN_COOKIE: ${{ secrets.ESPN_COOKIE }}
      MSF_KEY: ${{ secrets.MSF_KEY }}
      MSF_PASSWORD: ${{ secrets.MSF_PASSWORD }}
      NFLGSIS_USERNAME: ${{ secrets.NFLGSIS_USERNAME }}
      NFLGSIS_PASSWORD: ${{ secrets.NFLGSIS_PASSWORD }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps (core)
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi

      # --------------------------
      # Providers / schedule first
      # --------------------------
      - name: Build APISports schedule map (no scraping)
        run: python scripts/build/build_opponent_map_from_props.py "${{ github.event.inputs.season }}"

      - name: Build game lines from schedule
        run: python scripts/build_game_lines_from_schedule.py --season "${{ github.event.inputs.season }}"

      - name: Fetch Odds (Odds API)
        env:
          ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
        run: python scripts/fetch_game_lines_oddsapi.py
        continue-on-error: true

      # --------------------------------------------------
      # Pre-merge safety: ensure headers so merge can't die
      # --------------------------------------------------
      - name: Ensure header stubs (pre-merge)
        run: |
          python - <<'PY'
          from pathlib import Path
          import csv
          def ensure_header(path, cols):
              p = Path(path)
              p.parent.mkdir(parents=True, exist_ok=True)
              if not p.exists() or p.stat().st_size == 0:
                  with p.open("w", newline="") as f:
                      csv.writer(f).writerow(cols)
          ensure_header("data/player_form_consensus.csv", ["player","team","week","opponent"])
          ensure_header("data/opponent_map_from_props.csv", ["team","opponent","week","season"])
          print("[full-slate] header stubs ensured")
          PY

      # ---------------------------------------------
      # nflverse-derived builders (independent block)
      # ---------------------------------------------
      - name: Build QB run metrics
        run: python scripts/build/build_qb_run_metrics.py
        continue-on-error: true

      - name: Build play-volume splits
        run: python scripts/build/build_play_volume_splits.py
        continue-on-error: true

      - name: Build volatility widening
        run: python scripts/build/build_volatility_widening.py
        continue-on-error: true

      - name: Build run/pass funnel
        run: python scripts/build/build_run_pass_funnel.py
        continue-on-error: true

      - name: Build script escalators
        run: python scripts/build/build_script_escalators.py
        continue-on-error: true

      - name: Build coverage penalties
        run: python scripts/build/build_coverage_penalties.py
        continue-on-error: true

      # -------------------------------------------
      # Fragile HTML scrapers after merge (best-effort)
      # -------------------------------------------
      - name: Sharp coverage (team)
        run: python scripts/build/build_cb_coverage_team.py
        continue-on-error: true

      - name: WR/CB exposure (player)
        run: python scripts/build/build_cb_coverage_player.py
        continue-on-error: true

      - name: WR/CB exposure passthrough
        run: python scripts/build/build_wr_cb_exposure.py
        continue-on-error: true

      - name: Weekly injuries
        run: python scripts/build/build_injuries_weekly.py
        continue-on-error: true

      - name: Weather (NWS)
        run: python scripts/build/build_weather_week.py
        continue-on-error: true

      # -------------------------
      # Model / Engine execution
      # -------------------------
      - name: Elite model | Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyyaml

      - name: Elite model | Run pricing
        run: |
          python -m model.cli --config config.yaml
        env:
          PYTHONUNBUFFERED: "1"

      - name: Run pipeline
        run: |
          python -m engine --season "${{ github.event.inputs.season }}" --date "${{ github.event.inputs.date }}" --bookmakers=""

      # -------------
      # Upload stuff
      # -------------
      - name: Upload artifacts (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: run_${{ github.run_id }}
          path: |
            outputs/**
            data/*.csv
            data/_sharp_dump_*.html
          if-no-files-found: warn
