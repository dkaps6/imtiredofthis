name: Full Slate

on:
  workflow_dispatch:
    inputs:
      season:
        description: "Season (e.g., 2025)"
        required: false
        default: "2025"
      date:
        description: "Slate date (YYYY-MM-DD) or blank for latest"
        required: false
        default: ""

concurrency:
  group: full-slate-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}
      PYTHONDONTWRITEBYTECODE: "1"
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      APISPORTS_KEY: ${{ secrets.APISPORTS_KEY }}
      ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
      OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
      MSF_KEY: ${{ secrets.MSF_KEY }}
      MSF_PASSWORD: ${{ secrets.MSF_PASSWORD }}
      NFLGSIS_USERNAME: ${{ secrets.NFLGSIS_USERNAME }}
      NFLGSIS_PASSWORD: ${{ secrets.NFLGSIS_PASSWORD }}
      SEASON: ${{ github.event.inputs.season }}
      SLATE_DATE: ${{ github.event.inputs.date }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          pip install pyyaml

      ######################################################
      # A. RAW INPUT / SCRAPERS
      ######################################################

      - name: Pull SharpFootball team metrics
        run: |
          python scripts/providers/sharpfootball_pull.py --season "${{ env.SEASON }}" --dump-html
        # Writes Sharp pace/coverage/box/def tendencies outputs (e.g., sharp_pace_*.csv)

      - name: Build depth / roles (OurLads)
        run: |
          python scripts/providers/ourlads_depth.py --season "${{ env.SEASON }}"
        # Writes depth/roles outputs (e.g., roles_ourlads.csv)

      - name: Build opponent map from props
        run: |
          python scripts/build/build_opponent_map_from_props.py --season "${{ env.SEASON }}"
        # Writes data/opponent_map_from_props.csv

      - name: Build weather_week.csv
        env:
          OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
        run: |
          python scripts/build_weather_week.py --season "${{ env.SEASON }}"
        continue-on-error: true

      - name: Build QB run/scramble metrics
        run: |
          python scripts/build/build_qb_run_metrics.py --season "${{ env.SEASON }}"
        # Writes data/qb_scramble_rates.csv and data/qb_designed_runs.csv

      - name: Build team_form.csv (uses Sharp + nflverse)
        run: |
          python scripts/make_team_form.py --season "${{ env.SEASON }}"
        # Writes data/team_form.csv; fails fast if Sharp coverage metrics missing

      - name: Build player_form + consensus
        run: |
          python scripts/make_player_form.py --season "${{ env.SEASON }}"
        # Writes data/player_form.csv and data/player_form_consensus.csv

      - name: Run pipeline (full metrics / slip gen)
        run: |
          python scripts/make_metrics.py --season "${{ env.SEASON }}" --mode full
          python scripts/slipgen.py --season "${{ env.SEASON }}"

      - name: Build metrics_ready (validation gate)
        run: |
          python scripts/metrics_ready.py

      - name: Elite model | Run pricing
        run: |
          python scripts/make_metrics.py --season "${{ env.SEASON }}" --mode pricing
          python scripts/pricing.py --season "${{ env.SEASON }}"
        env:
          PYTHONUNBUFFERED: "1"

      ######################################################
      # ARTIFACTS
      ######################################################

      - name: Upload artifacts (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: run_${{ github.run_id }}
          path: |
            outputs/**
            data/*.csv
            data/_debug/**
          if-no-files-found: warn
