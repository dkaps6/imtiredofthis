name: Full Slate

on:
  workflow_dispatch:
    inputs:
      season:
        description: "Season (e.g. 2025)"
        required: false
        default: "2025"
      date:
        description: "Slate date (YYYY-MM-DD) or blank for latest"
        required: false
        default: ""

jobs:
  full_slate:
    runs-on: ubuntu-latest
    env:
      ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
      ESPN_COOKIE: ${{ secrets.ESPN_COOKIE }}   # optional
      NFL_FORM_STRICT: "1"
      MC_TRIALS: "25000"
      PYTHONUNBUFFERED: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      # --- Install dependencies BEFORE running the engine ---
      - name: Install requirements
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install --prefer-binary -r requirements.txt

      # Replace the old duplicate "Install deps" with this quick import check
      - name: Verify deps (nfl_data_py / pyarrow)
        run: |
          python - <<'PY'
          import sys, importlib
          def check(mod):
              m = importlib.import_module(mod)
              path = getattr(m, "__file__", "(builtin)")
              ok_path = ("site-packages" in (path or "")) or ("dist-packages" in (path or ""))
              print(f"{mod}: path={path}")
              if mod == "nfl_data_py":
                  if not hasattr(m, "import_pbp_data"):
                      print("nfl_data_py present but missing import_pbp_data() — wrong module")
                      sys.exit(1)
                  if not ok_path:
                      print("nfl_data_py not from site/dist-packages — likely shadowed")
                      sys.exit(1)
          for mod in ["nfl_data_py","pyarrow","pandas","numpy"]:
              check(mod)
          PY

      - name: Prepare dirs
        run: |
          mkdir -p data outputs outputs/metrics logs

      - name: Add repo to PYTHONPATH
        run: echo "PYTHONPATH=$PWD" >> $GITHUB_ENV

      - name: Run pipeline
        run: |
          python -m engine --season "2025" --date "" --bookmakers=""

      # Always ship artifacts (snapshots, logs, partial CSVs) even if the run fails
      - name: Upload artifacts (always)
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: run-${{ github.run_id }}
          path: |
            runs/**/*.zip
            runs/**/*
            outputs/**
            data/**
            logs/**
