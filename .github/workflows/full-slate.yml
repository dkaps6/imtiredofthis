name: Full Slate

on:
  workflow_dispatch:
    inputs:
      season:
        description: "Season (e.g., 2025)"
        required: false
        default: "2025"
      date:
        description: "Slate date (YYYY-MM-DD) or blank for latest"
        required: false
        default: ""

concurrency:
  group: full-slate-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}
      PYTHONDONTWRITEBYTECODE: "1"
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      APISPORTS_KEY: ${{ secrets.APISPORTS_KEY }}
      ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
      MSF_KEY: ${{ secrets.MSF_KEY }}
      MSF_PASSWORD: ${{ secrets.MSF_PASSWORD }}
      NFLGSIS_USERNAME: ${{ secrets.NFLGSIS_USERNAME }}
      NFLGSIS_PASSWORD: ${{ secrets.NFLGSIS_PASSWORD }}

    steps:
      # Phase A — setup & dependencies
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        shell: bash
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi

      # Phase B — early builders
      - name: Build depth chart (Ourlads)
        shell: bash
        timeout-minutes: 5
        run: |
          set -euo pipefail
          python scripts/providers/ourlads_depth.py

      - name: Build opponent map from props
        shell: bash
        timeout-minutes: 5
        run: |
          set -euo pipefail
          python scripts/build/build_opponent_map_from_props.py "${{ github.event.inputs.season }}"

      - name: Build Game Lines
        shell: bash
        timeout-minutes: 5
        run: |
          set -euo pipefail
          python scripts/build_game_lines_from_schedule.py --season "${{ github.event.inputs.season }}"

      - name: Validate Ourlads roles CSV
        shell: bash
        run: |
          set -euo pipefail
          test -s data/roles_ourlads.csv || (echo "roles_ourlads.csv missing or empty" >&2; exit 1)

      # Player form depends on depth chart roles
      - name: Build player form (usage, roles, matchups)
        shell: bash
        timeout-minutes: 10
        run: |
          set -euo pipefail
          python scripts/make_player_form.py

      - name: Sharp Football team metrics
        shell: bash
        run: |
          set -euo pipefail
          python scripts/providers/sharpfootball_pull.py --season "${{ github.event.inputs.season }}" --dump-html

      # Phase C — metric feeders
      - name: Build team form
        shell: bash
        timeout-minutes: 10
        run: |
          set -euo pipefail
          python scripts/make_team_form.py

      - name: Build QB run metrics
        shell: bash
        timeout-minutes: 8
        run: |
          set -euo pipefail
          python scripts/build/build_qb_run_metrics.py

      - name: Build weather week
        shell: bash
        timeout-minutes: 10
        run: |
          set -euo pipefail
          python scripts/build/build_weather_week.py

      - name: Build play volume splits
        shell: bash
        timeout-minutes: 8
        run: |
          set -euo pipefail
          python scripts/build/build_play_volume_splits.py

      - name: Build volatility widening
        shell: bash
        timeout-minutes: 8
        run: |
          set -euo pipefail
          python scripts/build/build_volatility_widening.py

      - name: Build run/pass funnel
        shell: bash
        timeout-minutes: 8
        run: |
          set -euo pipefail
          python scripts/build/build_run_pass_funnel.py

      - name: Build script escalators
        shell: bash
        timeout-minutes: 8
        run: |
          set -euo pipefail
          python scripts/build/build_script_escalators.py

      - name: Build coverage penalties
        shell: bash
        timeout-minutes: 8
        run: |
          set -euo pipefail
          python scripts/build/build_coverage_penalties.py

      - name: Fetch Odds (Odds API)
        env:
          ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
        run: python scripts/fetch_game_lines_oddsapi.py
        continue-on-error: true

      - name: Run pipeline
        run: |
          python -m engine --season "${{ github.event.inputs.season }}" --date "" --bookmakers=""

      - name: Sanity gate | Metrics ready
        run: |
          python scripts/metrics_ready.py

      - name: Elite model | Run pricing
        env:
          PYTHONUNBUFFERED: "1"
        run: |
          python -m model.cli --config config.yaml

      - name: Upload Elite outputs
        uses: actions/upload-artifact@v4
        with:
          name: elite-model-outputs-${{ github.run_id }}
          path: |
            outputs/full_model_elite.csv
            outputs/bet_slip_elite_green.csv
          if-no-files-found: warn
          retention-days: 7

      - name: Upload pipeline artifacts (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: run_${{ github.run_id }}
          path: |
            data/**
            outputs/**
            data/_debug/**
          if-no-files-found: warn
