name: diag-props
on:
  workflow_dispatch:
    inputs:
      event_id:
        description: "Odds API event id (from outputs/odds_game.csv)"
        required: true
      market:
        description: "Market key (e.g., player_reception_yds)"
        required: true
        default: "player_reception_yds"
      bookmakers:
        description: "CSV list of bookmaker keys (e.g., draftkings,fanduel,betmgm,caesars). Leave blank for none."
        required: false
        default: "draftkings,fanduel,betmgm,caesars"
      region:
        description: "Region if no bookmakers"
        required: false
        default: "us"

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: pip install -r requirements.txt || true

      - name: Curl per-event props (raw)
        env:
          ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
        run: |
          mkdir -p outputs/_debug
          BASE="https://api.the-odds-api.com/v4"
          SPORT="americanfootball_nfl"
          EID="${{ github.event.inputs.event_id }}"
          MK="${{ github.event.inputs.market }}"
          BMS="${{ github.event.inputs.bookmakers }}"
          REGION="${{ github.event.inputs.region }}"

          if [ -n "$BMS" ]; then
            URL="$BASE/sports/$SPORT/events/$EID/odds?markets=$MK&oddsFormat=american&bookmakers=$BMS&apiKey=$ODDS_API_KEY"
          else
            URL="$BASE/sports/$SPORT/events/$EID/odds?markets=$MK&regions=$REGION&oddsFormat=american&apiKey=$ODDS_API_KEY"
          fi

          echo "GET $URL" > outputs/_debug/request.txt
          curl -sS "$URL" -o outputs/_debug/response.json
          jq 'keys' outputs/_debug/response.json || true
          jq '.bookmakers | length' outputs/_debug/response.json || true
          jq '.bookmakers[].key' outputs/_debug/response.json || true

      - name: Run repo fetcher for same market
        env:
          ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
        run: |
          python - <<'PY'
          import os, json, sys
          from scripts.fetch_props_oddsapi import _normalize_player_rows
          from scripts.fetch_props_oddsapi import fetch_odds
          from scripts.fetch_props_oddsapi import _fetch_market_for_events
          from scripts.fetch_props_oddsapi import _get, BASE, SPORT
          eid = "${{ github.event.inputs.event_id }}"
          mk  = "${{ github.event.inputs.market }}"
          bms = "${{ github.event.inputs.bookmakers }}".strip(", ")
          region = "${{ github.event.inputs.region }}"
          apiKey = os.environ.get("ODDS_API_KEY","")
          import requests
          url=f"{BASE}/sports/{SPORT}/events/{eid}/odds"
          if bms:
              params={"apiKey":apiKey,"markets":mk,"oddsFormat":"american","bookmakers":bms}
          else:
              params={"apiKey":apiKey,"markets":mk,"oddsFormat":"american","regions":region}
          import pathlib
          pathlib.Path("outputs/_debug").mkdir(parents=True, exist_ok=True)
          status, js, headers = _get(url, params)
          print("status=",status," present_bookmaker_keys=",[bm.get("key") for bm in (js or {}).get("bookmakers",[])])
          with open("outputs/_debug/response_via_client.json","w") as f:
              json.dump(js, f, indent=2)
          PY

      - name: Upload debug artifacts
        uses: actions/upload-artifact@v4
        with:
          name: diag-props-${{ github.run_id }}
          path: outputs/_debug
