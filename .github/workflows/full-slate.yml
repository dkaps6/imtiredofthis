name: full-slate

on:
  workflow_dispatch:
    inputs:
      season:
        description: "Season (e.g., 2025)"
        required: false
        default: "2025"
      date:
        description: "Slate date (YYYY-MM-DD) or blank for latest"
        required: false
        default: ""

concurrency:
  group: full-slate-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

# Global env inherits into every job
env:
  PYTHONPATH: ${{ github.workspace }}
  PYTHONDONTWRITEBYTECODE: "1"
  PIP_DISABLE_PIP_VERSION_CHECK: "1"

  # external keys / creds
  APISPORTS_KEY: ${{ secrets.APISPORTS_KEY }}
  ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
  OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
  MSF_KEY: ${{ secrets.MSF_KEY }}
  MSF_PASSWORD: ${{ secrets.MSF_PASSWORD }}
  NFLGSIS_USERNAME: ${{ secrets.NFLGSIS_USERNAME }}
  NFLGSIS_PASSWORD: ${{ secrets.NFLGSIS_PASSWORD }}

  # dynamic inputs
  SEASON: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.season != '' ? github.event.inputs.season : '2025' }}
  SLATE_DATE: ${{ github.event_name == 'workflow_dispatch' ? github.event.inputs.date : '' }}

jobs:

  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Prepare workspace directories
        run: |
          mkdir -p data data/_debug data/raw data/intermediate data/final outputs logs artifacts

  gather_inputs:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build opponent map from props
        run: |
          python scripts/build/build_opponent_map_from_props.py "$SEASON"

      - name: Build depth / roles (OurLads)
        run: |
          python scripts/providers/ourlads_depth.py --season "$SEASON"

      - name: Build QB run metrics
        run: |
          python scripts/build/build_qb_run_metrics.py

      - name: Build weather with fallback
        run: |
          mkdir -p data
          python scripts/build/build_weather_week.py || true
          if [ ! -s data/weather_week.csv ]; then
            printf "game_id,tempF,windMph,precipProb\n" > data/weather_week.csv
          fi

      - name: Upload raw input artifacts
        uses: actions/upload-artifact@v4
        with:
          name: step1-inputs
          path: data/*
          if-no-files-found: warn

  build_forms:
    runs-on: ubuntu-latest
    needs: gather_inputs
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build player form base
        run: |
          python scripts/make_player_form.py --season "$SEASON"

      - name: Enrich player form
        run: |
          python scripts/enrich_player_form.py

      - name: Build team form
        run: |
          python scripts/make_team_form.py --season "$SEASON"

      - name: Upload form artifacts
        uses: actions/upload-artifact@v4
        with:
          name: step2-forms
          path: |
            data/player_form.csv
            data/player_form_consensus.csv
            data/team_form.csv
          if-no-files-found: error

  run_pipeline:
    runs-on: ubuntu-latest
    needs: build_forms
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build metrics-ready dataset
        run: |
          python scripts/make_metrics.py

      - name: Upload pipeline artifacts
        uses: actions/upload-artifact@v4
        with:
          name: step3-pipeline
          path: |
            data/*.csv
            outputs/**
          if-no-files-found: warn

  metrics_ready:
    runs-on: ubuntu-latest
    needs: run_pipeline
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Validate metrics output
        run: |
          python scripts/validate_metrics.py

      - name: Upload validation artifacts
        uses: actions/upload-artifact@v4
        with:
          name: step4-validation
          path: logs
          if-no-files-found: warn

  pricing:
    runs-on: ubuntu-latest
    needs: metrics_ready
    # only run pricing if metrics_ready didn't blow up
    if: ${{ needs.metrics_ready.result == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pricing models
        run: |
          python -m model.cli --config config.yaml

      - name: Assemble slips and books
        run: |
          python -m engine --season "$SEASON" --date "$SLATE_DATE" --bookmakers=""

      - name: Upload pricing artifacts
        uses: actions/upload-artifact@v4
        with:
          name: step5-pricing
          path: |
            outputs/**
            data/*.csv
          if-no-files-found: warn

  upload_artifacts:
    runs-on: ubuntu-latest
    needs:
      - gather_inputs
      - build_forms
      - run_pipeline
      - metrics_ready
      - pricing
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Bundle run artifacts
        run: |
          mkdir -p artifacts
          cp -r data artifacts/data || true
          cp -r outputs artifacts/outputs || true
          cp -r logs artifacts/logs || true

      - name: Upload full debug bundle
        uses: actions/upload-artifact@v4
        with:
          name: full-debug-bundle
          path: artifacts
          if-no-files-found: warn
